name: Test, Build and Deploy

on:
  push:
    branches: [ thisara_dev ]
  pull_request:
    branches: [ thisara_dev ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  GKE_NAMESPACE: ${{ secrets.GKE_NAMESPACE }}
  GAR_REGION: ${{ secrets.GAR_REGION }}
  IMAGE_TAG: "${{ secrets.GAR_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.GAR_NAME }}/${{ secrets.GCR_SERVICE }}:${{ github.sha }}"
  MONGODB_URI: ${{ secrets.MONGO_URI }}

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.MONGO_URI }}
          PORT: 5002

      - name: Run Snyk scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            pasanbaddewithana1234/product-service:latest
            pasanbaddewithana1234/product-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDS }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GAR_REGION }}-docker.pkg.dev --quiet

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Build and push to GCR
        run: |
          docker build . -t ${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_TAG }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/product-service -n ${{ env.GKE_NAMESPACE }}

      - name: Verify deployment
        run: |
          kubectl get pods -n ${{ env.GKE_NAMESPACE }} -l app=product-service