name: Test, Build and Deploy to DockerHub and GKE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID:    ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER:   ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE:      ${{ secrets.GKE_ZONE }}
  GKE_NAMESPACE: ${{ secrets.GKE_NAMESPACE }}
  GAR_REGION:    ${{ secrets.GAR_REGION }}
  GAR_NAME:      ${{ secrets.GAR_NAME }}
  GCR_SERVICE:   ${{ secrets.GCR_SERVICE }}
  IMAGE_TAG:     "${{ secrets.GAR_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.GAR_NAME }}/${{ secrets.GCR_SERVICE }}:latest"

jobs:
  test-and-dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Create env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "NODE_ENV=test" >> .env
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.MONGO_URI }}
          PORT: ${{ secrets.PORT }}

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: |
            MONGO_URI=${{ secrets.MONGO_URI }}
            PORT=${{ secrets.PORT }}
          tags: |
            pasanbaddewithana1234/product-service:latest
            pasanbaddewithana1234/product-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify Docker Hub deployment
        run: |
          echo "Image tags:"
          echo "latest: pasanbaddewithana1234/product-service:latest"
          echo "sha: pasanbaddewithana1234/product-service:${{ github.sha }}"

  deploy-to-gke:
    runs-on: ubuntu-latest
    needs: test-and-dockerhub
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDS }}"

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install GKE auth plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Configure Docker for GAR
        run: |
          gcloud auth configure-docker "${{ env.GAR_REGION }}-docker.pkg.dev" --quiet

      - name: Build & Push Docker image
        run: |
          docker build --tag "${{ env.IMAGE_TAG }}" -f ./Dockerfile ./          
          docker push "${{ env.IMAGE_TAG }}"

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials "${{ env.GKE_CLUSTER }}" \
            --zone "${{ env.GKE_ZONE }}" \
            --project "${{ env.PROJECT_ID }}"

      - name: Deploy to GKE
        run: |
          sed -i "s|<BACKEND_IMAGE>|${{ env.IMAGE_TAG }}|g" deployment/product-deployment.yaml
          kubectl apply -f deployment/ -n "${{ env.GKE_NAMESPACE }}"

      - name: Rollout restart
        run: |
          kubectl rollout restart deployment feedback-service -n "${{ env.GKE_NAMESPACE }}"

      - name: Show service endpoint
        run: |
          kubectl get svc feedback-service -n "${{ env.GKE_NAMESPACE }}"